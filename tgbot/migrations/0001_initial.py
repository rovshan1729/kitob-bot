# Generated by Django 5.0.9 on 2024-09-10 12:28

import ckeditor.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Media",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(editable=False, primary_key=True, serialize=False),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="uploads/%Y/%m/%d/", verbose_name="File"
                    ),
                ),
                (
                    "file_type",
                    models.CharField(
                        choices=[("video", "Video"), ("image", "Image")],
                        verbose_name="File Type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Media",
                "verbose_name_plural": "Media",
                "db_table": "Media",
            },
        ),
        migrations.CreateModel(
            name="Settings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "site_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Site name"
                    ),
                ),
                (
                    "site_logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="uploads/%Y/%m/%d/",
                        verbose_name="Site logo",
                    ),
                ),
                (
                    "bot_token",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Bot token"
                    ),
                ),
                (
                    "host_url",
                    models.URLField(blank=True, null=True, verbose_name="Host URL"),
                ),
            ],
            options={
                "verbose_name": "Settings",
            },
        ),
        migrations.CreateModel(
            name="TelegramBot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("name", models.CharField(blank=True, max_length=30, null=True)),
                ("bot_token", models.CharField(max_length=255)),
                (
                    "bot_username",
                    models.CharField(blank=True, max_length=125, null=True),
                ),
            ],
            options={
                "verbose_name": "Telegram Bot",
                "verbose_name_plural": "Telegram Bots",
                "db_table": "telegram_bots",
            },
        ),
        migrations.CreateModel(
            name="RequiredGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "chat_id",
                    models.CharField(
                        help_text="Chat ID: -100000000 or Username: @username",
                        max_length=255,
                        verbose_name="Chat ID or Username",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("title_uz", models.CharField(blank=True, max_length=255, null=True)),
                ("title_ru", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "bot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tgbot.telegrambot",
                    ),
                ),
            ],
            options={
                "verbose_name": "Required Chats",
                "verbose_name_plural": "Required Chats",
                "db_table": "required_groups",
            },
        ),
        migrations.CreateModel(
            name="TelegramButton",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Button Name")),
                (
                    "title_uz",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Button Name"
                    ),
                ),
                (
                    "title_ru",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Button Name"
                    ),
                ),
                ("text", ckeditor.fields.RichTextField(verbose_name="Button Text")),
                (
                    "text_uz",
                    ckeditor.fields.RichTextField(
                        null=True, verbose_name="Button Text"
                    ),
                ),
                (
                    "text_ru",
                    ckeditor.fields.RichTextField(
                        null=True, verbose_name="Button Text"
                    ),
                ),
                (
                    "content",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="buttons",
                        verbose_name="Button Content",
                    ),
                ),
                (
                    "file_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="File ID"
                    ),
                ),
                (
                    "bot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tgbot.telegrambot",
                        verbose_name="Telegram Bot",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tgbot.telegrambutton",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TelegramProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("telegram_id", models.PositiveBigIntegerField()),
                ("username", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        choices=[("uz", "O'zbekcha"), ("ru", "Русский")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Full Name"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Phone Number",
                    ),
                ),
                ("is_registered", models.BooleanField(default=False)),
                (
                    "bot",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tgbot.telegrambot",
                    ),
                ),
            ],
            options={
                "verbose_name": "Telegram Profile",
                "verbose_name_plural": "Telegram Profiles",
                "db_table": "telegram_profiles",
            },
        ),
        migrations.CreateModel(
            name="BookReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "reading_day",
                    models.IntegerField(default=1, verbose_name="Reading day"),
                ),
                ("book", models.CharField(max_length=255, verbose_name="Book title")),
                (
                    "pages_read",
                    models.IntegerField(default=1, verbose_name="Pages read"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tgbot.telegramprofile",
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
